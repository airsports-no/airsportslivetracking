# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger:
# - master

# resources:
#   repositories:
#     - repository: helmChart
#       type: git
#       name: live_tracking_helm_chart

variables:
  containerName: tracker_web
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2393d3ea-2041-4fc3-854b-a2a623ba65ac'
  imageRepository: 'livetracking'
  containerRegistry: 'airsportsacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - checkout: self
      submodules: true
      persistCredentials: true
    - task: DockerCompose@0
      displayName: Pull web
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'pull tracker_web'
    - task: DockerCompose@0
      displayName: Pull the rest
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'pull'
    - task: DockerCompose@0
      displayName: Build services
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Build services'
        additionalImageTags: '${{Variables.tag}}'
        includeLatestTag: true
    - task: DockerCompose@0
      displayName: Push tracker_web to docker registry
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        additionalImageTags: '${{Variables.tag}}'
        includeLatestTag: true
        arguments: 'tracker_web'
    - task: DockerCompose@0
      displayName: Push the rest to docker registry
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
        additionalImageTags: '${{Variables.tag}}'
        includeLatestTag: true
    
- stage: ApproveTest
  condition: succeeded()
  jobs:
  - job: ApproveTest
    pool: server
    steps:
    - task: ManualValidation@0
      displayName: 'Wait for validation'
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: 'kolaf@airsportslt.onmicrosoft.com'
        instructions: 'Approve running tests'
- stage: Test
  condition: succeeded()
  jobs:
  - job: Test
    steps:
    - checkout: self
      submodules: true
      persistCredentials: true
    - task: DockerCompose@0
      displayName: Pull web
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'pull tracker_web'
    - task: DockerCompose@0
      displayName: Pull the rest
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'pull'
    - task: DockerCompose@0
      displayName: Run tests
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up'
        arguments: '-d ${{Variables.containerName}}'
    - script: |
        docker exec ${{Variables.containerName}} /bin/bash -c "mkdir -p reports && rm -rf reports/*"
      displayName: Prepare web container for test run
    - script: |
       docker exec ${{Variables.containerName}} /bin/bash -c "/wait-for-it.sh \"mysql:3306\" -t 30"
       docker exec ${{Variables.containerName}} /bin/bash -c "python3 manage.py jenkins --enable-coverage -v 2 --no-input || test -f reports/junit.xml"
      displayName: Run main tests
    - script: 'docker cp ${{Variables.containerName}}:/src/reports/. reports'
      displayName: Get reports from container
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: 'reports/coverage.xml'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'reports/*.xml'
        mergeTestResults: true
        failTaskOnFailedTests: true
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
        azureContainerRegistry: '{"loginServer":"airsportsacr.azurecr.io", "id" : "/subscriptions/025b77b1-c02b-4961-a548-38caf9cbffcd/resourceGroups/airsports_group/providers/Microsoft.ContainerRegistry/registries/airsportsacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'down'
    - script: |  
        rm -rf reports/*
      displayName: 'Clear reports'
- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: live_tracking_deployment
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/deployment-jobs?view=azure-devops
    displayName: 'Deploy'
    environment: 'aks-release'
    strategy:
      runOnce:
        preDeploy:
          pool: server
          steps:
          - task: ManualValidation@0
            displayName: 'Wait for validation'
            timeoutInMinutes: 1440 # task times out in 1 day
            inputs:
              notifyUsers: 'kolaf@airsportslt.onmicrosoft.com'
              instructions: 'Approve deployment'
        deploy:
          steps:
          # - checkout: helmChart
          - task: HelmInstaller@0
            inputs:
              helmVersion: '2.14.1'
              installKubectl: true
          - task: DownloadSecureFile@1
            name: privateValues
            displayName: 'Download private values'
            inputs:
              secureFile: 'private_values.yml'
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Airsports subscription(025b77b1-c02b-4961-a548-38caf9cbffcd)'
              azureResourceGroup: 'airsports_group'
              kubernetesCluster: 'airsports2'
              namespace: 'airsports'
              command: 'upgrade'
              chartType: 'Name'
              chartName: '$(Agent.BuildDirectory)/s/live_tracking/helm/'
              releaseName: 'airsportsrelease'
              overrideValues: 'image.tag=${{ variables.tag }}'
              valueFile: '$(privateValues.secureFilePath)'