apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: tracker-processor
  name: tracker-processor
spec:
  replicas: 1
  selector:
    matchLabels:
      service: tracker-processor
  template:
    metadata:
      labels:
        service: tracker-processor
        date: "{{ now | unixEpoch }}"
    spec:
      nodeSelector:
        scalingType: initial
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: "alpine:3.6"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ include "live_tracking.mysqlHost" . }} 3306 && echo mysql ok;
                do sleep 2;
              done
        - name: wait-for-redis
          image: "alpine:3.6"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ include "live_tracking.redisHost" . }} 6379 && echo redis ok;
                do sleep 2;
              done
      containers:
      - image: airsportsacr.azurecr.io/tracker_processor:{{ .Values.image.tag }}
        resources:
          requests:
            cpu: 100m
            memory: 600Mi  # Uses 231 Mi
          limits:
            cpu: 600m
            memory: 1.5Gi
#        command: ["/bin/bash", "-c",  "sleep 1h"]
        name: tracker-processor
        env:
          - name: K8S_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.serviceAccountSecretName }}
                key: token
        envFrom:
          - configMapRef:
              name: envs-production-other
          - secretRef:
              name: pw-secrets
        volumeMounts:
          - mountPath: /secret
            readOnly: true
            name: firebase
          - mountPath: /aks_certificate
            readOnly: true
            name: aks-certificate
      restartPolicy: Always
      volumes:
        - name: firebase
          secret:
            secretName: firebase-secrets
        - name: aks-certificate
          secret:
            secretName: {{ .Values.serviceAccountSecretName }}
