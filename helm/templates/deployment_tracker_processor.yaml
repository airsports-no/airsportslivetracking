apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: tracker-processor
  name: tracker-processor
spec:
  replicas: 1
  selector:
    matchLabels:
      service: tracker-processor
  template:
    metadata:
      labels:
        service: tracker-processor
        date: "{{ now | unixEpoch }}"
    spec:
      terminationGracePeriodSeconds: 25
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: cloud.google.com/gke-spot
                    operator: In
                    values:
                      - "true"
      serviceAccountName: calculator-scheduler
      initContainers:
        - name: wait-for-db
          image: "alpine:3.6"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ include "live_tracking.mysqlHost" . }} 3306 && echo mysql ok;
                do sleep 2;
              done
        - name: wait-for-redis
          image: "alpine:3.6"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ include "live_tracking.redisHost" . }} {{ .Values.externalRedis.port | quote }} && echo redis ok;
                do sleep 2;
              done
      containers:
      - image: europe-west3-docker.pkg.dev/airsports-613ce/airsports/tracker_processor:{{ .Values.image.tag }}
        resources:
          requests:
            cpu: 1000m
            memory: 1Gi  # Uses 231 Mi
          limits:
            cpu: 600m
            memory: 1.5Gi
#        command: ["/bin/bash", "-c",  "sleep 1h"]
        name: tracker-processor
#        env:
#          - name: K8S_TOKEN
#            valueFrom:
#              secretKeyRef:
#                name: {{ .Values.serviceAccountSecretName }}
#                key: token
        envFrom:
          - configMapRef:
              name: envs-production-other
          - secretRef:
              name: pw-secrets
        livenessProbe:
          exec:
            # bash is needed to replace the environment variable
            command: [
              "bash",
              "-c",
              "python -m probes.is_alive || (for pid in $(ps axo pid --no-headers); do ps -p $pid -o command --no-headers ; ps -T -p $pid; done; false )"
            ]
          initialDelaySeconds: 30  # startup takes some time
          periodSeconds: 120
          timeoutSeconds: 10
        readinessProbe:
          exec:
            # bash is needed to replace the environment variable
            command: [
              "python", "-m", "probes.is_ready""
            ]
          initialDelaySeconds: 30  # startup takes some time
          periodSeconds: 120
          timeoutSeconds: 10
        volumeMounts:
          - mountPath: /secret
            readOnly: true
            name: firebase
#          - mountPath: /aks_certificate
#            readOnly: true
#            name: aks-certificate
      restartPolicy: Always
      volumes:
        - name: firebase
          secret:
            secretName: firebase-secrets
#        - name: aks-certificate
#          secret:
#            secretName: {{ .Values.serviceAccountSecretName }}
