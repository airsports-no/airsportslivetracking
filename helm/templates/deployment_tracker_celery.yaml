apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: tracker-celery
  name: tracker-celery
spec:
  replicas: 1
  selector:
    matchLabels:
      service: tracker-celery
  template:
    metadata:
      labels:
        service: tracker-celery
        date: "{{ now | unixEpoch }}"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: "alpine:3.6"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ include "live_tracking.mysqlHost" . }} 3306 && echo mysql ok;
                do sleep 2;
              done
        - name: wait-for-redis
          image: "alpine:3.6"
          command:
            - 'sh'
            - '-c'
            - >
              until nc -z -w 2 {{ include "live_tracking.redisHost" . }} 6379 && echo redis ok;
                do sleep 2;
              done
      containers:
      - image: europe-west3-docker.pkg.dev/airsports-613ce/airsports/tracker_celery:{{ .Values.image.tag }}
#        command: ["/bin/bash", "-c",  "sleep 1h"]
        name: tracker-celery
        envFrom:
          - configMapRef:
              name: envs-production-other
          - secretRef:
              name: pw-secrets
        resources:
          requests:
            cpu: 100m
            memory: 800Mi
          limits:
            cpu: 400m
            memory: 3Gi
        volumeMounts:
          - mountPath: /secret
            readOnly: true
            name: firebase
          - mountPath: /maptiles
            readOnly: true
            name: filtestore-maps
        livenessProbe:
          exec:
            # bash is needed to replace the environment variable
            command: [
                "bash",
                "-c",
                "python /src/celery_liveness.py"
            ]
          initialDelaySeconds: 30  # startup takes some time
          periodSeconds: 12  # default is quite often and celery uses a lot cpu/ram then.
          timeoutSeconds: 10
          failureThreshold: 2
        readinessProbe:
          exec:
            # bash is needed to replace the environment variable
            command: [
              "bash",
              "-c",
              "python /src/celery_readiness.py"
            ]
          initialDelaySeconds: 30  # startup takes some time
          periodSeconds: 300  # default is quite often and celery uses a lot cpu/ram then.
          timeoutSeconds: 10
          failureThreshold: 3
      restartPolicy: Always
      volumes:
        - name: firebase
          secret:
            secretName: firebase-secrets
        - name: filtestore-maps
          persistentVolumeClaim:
            claimName: filtestore-maps
