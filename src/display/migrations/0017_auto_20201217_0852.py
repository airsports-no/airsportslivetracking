# Generated by Django 3.1.4 on 2020-12-17 08:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('display', '0016_auto_20201215_0926'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_score_sorting_direction', models.CharField(choices=[('desc', 'Descending'), ('asc', 'Ascending')], default='asc', help_text='Whether the lowest (ascending) or highest (ascending) score is the best result', max_length=50)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TaskTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('heading', models.CharField(max_length=100)),
                ('sorting', models.CharField(choices=[('desc', 'Descending'), ('asc', 'Ascending')], default='asc', help_text='Whether the lowest (ascending) or highest (ascending) score is the best result', max_length=50)),
                ('index', models.IntegerField(help_text='The index of the task when displayed as columns in a table. Indexes are sorted in ascending order to determine column order')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='display.task')),
            ],
            options={
                'unique_together': {('name', 'task')},
            },
        ),
        migrations.AddField(
            model_name='contest',
            name='summary_score_sorting_direction',
            field=models.CharField(choices=[('desc', 'Descending'), ('asc', 'Ascending')], default='asc', help_text='Whether the lowest (ascending) or highest (ascending) score is the best result', max_length=50),
        ),
        migrations.AlterField(
            model_name='contestant',
            name='scorecard',
            field=models.ForeignKey(help_text='Reference to an existing scorecard name. Currently existing scorecards: <function Contestant.<lambda> at 0x7fb22718f7b8>', on_delete=django.db.models.deletion.PROTECT, to='display.scorecard'),
        ),
        migrations.CreateModel(
            name='TaskSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='display.task')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='display.team')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='contest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='display.contest'),
        ),
        migrations.AddField(
            model_name='task',
            name='default_sorting',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_sort', to='display.tasktest'),
        ),
        migrations.CreateModel(
            name='ContestSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField()),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='display.contest')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='display.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamTestScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.FloatField()),
                ('task_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='display.tasktest')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='display.team')),
            ],
            options={
                'unique_together': {('team', 'task_test')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='task',
            unique_together={('name', 'contest')},
        ),
    ]
