steps:
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
  - -c
  - |
    git submodule update --init
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull','europe-west3-docker.pkg.dev/${PROJECT_ID}/airsports/tracker_base:latest']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build','-t','tracker_base','--cache-from','europe-west3-docker.pkg.dev/${PROJECT_ID}/airsports/tracker_base:latest','.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag','tracker_base:latest','europe-west3-docker.pkg.dev/${PROJECT_ID}/airsports/tracker_base:${BUILD_ID}']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push','europe-west3-docker.pkg.dev/${PROJECT_ID}/airsports/tracker_base:${BUILD_ID}']
- name: 'gcr.io/cloud-builders/docker'
  args: ['compose','up','-d','tracker_daphe']
  # args: ['run','tracker_base','pytest','--junitxml=${SHORT_SHA}_test_log.xml']
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker exec tracker_daphe /bin/bash -c "mkdir -p reports && rm -rf reports/*"
    docker exec tracker_daphe /bin/bash -c "/wait-for-it.sh \"mysql:3306\" -t 30"
    docker exec tracker_daphe /bin/bash -c "pytest --junitxml reports/${SHORT_SHA}_test_results.xml --cov=. --cov-report=xml:reports/${SHORT_SHA}_coverage.xml || test -f reports/${SHORT_SHA}_test_results.xml"
    docker cp tracker_daphe:/src/reports/. reports
    docker cp tracker_daphe:/src/reports/. reports
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['copy','${SHORT_SHA}_test_log.xml','./${SHORT_SHA}_test_log.xml']
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c','echo','$$PRIVATE_VALUES','>','private_values.yaml']
  secretEnv:
    - 'PRIVATE_VALUES'
# Set up kubectl
- name: gcr.io/cloud-builders/kubectl
  id: Configure kubectl
  args:
    - cluster-info
  env:
    - 'CLOUDSDK_COMPUTE_REGION=europe-north1'
    - 'CLOUDSDK_CONTAINER_CLUSTER=airsports-cluster'
    - 'KUBECONFIG=/workspace/.kube/config'
# Set up Helm and deploy the application
- name: 'gcr.io/cloud-builders/helm'
  args:
    - 'upgrade'
    - '--install'
    - 'airsportsrelease'
    - './helm'
    - '-f'
    - 'private_values.yaml'
    - '--set=image.tag=$BUILD_ID'
    - '--namespace=default'
    - '--timeout 20m0s'
    - '--wait'
  env:
    - 'HELM_HOME=/workspace'
    - 'KUBECONFIG=/workspace/.kube/config'
    - 'CLOUDSDK_COMPUTE_ZONE=europe-north1'
    - 'CLOUDSDK_CONTAINER_CLUSTER=airsports-cluster'
# Save test logs to Google Cloud Storage
artifacts:
  objects:
    location: gs://${airsports-613ce_cloudbuild}/
    paths:
      - ${SHORT_SHA}_test_log.xml
      - ${SHORT_SHA}_coverage.xml
images:
- 'europe-west3-docker.pkg.dev/${PROJECT_ID}/airsports/tracker_base:${BUILD_ID}'
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/private_values_gcloud/versions/latest
    env: PRIVATE_VALUES
options:
  logging: CLOUD_LOGGING_ONLY
